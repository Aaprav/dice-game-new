{"version":3,"file":"static/js/856.b63e2f12.chunk.js","mappings":"6LAaA,MAAMA,UAAgBC,EAAAA,UAEpBC,WAAAA,CAAYC,GACVC,MAAMD,GAAM,KAoDdE,QAAU,KACRC,KAAKC,YAAcC,sBAAsBF,KAAKD,SAC9CC,KAAKG,MAAMJ,QAAQC,KAAKI,WAAWC,SAASL,KAAKI,WAAWE,OAC5DN,KAAKI,WAAWG,QAAQ,EACzB,KAGDC,eAAkBC,IAChB,MAAMC,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QACtDJ,EAAUK,IAAI,WAAYN,GAC1B,IAAIO,EAASN,EAAUO,WACnBC,EAAG,GAAAC,OAAMP,OAAOC,SAASO,SAAQ,KAAAD,OAAIH,GACzCJ,OAAOC,SAASQ,KAAOH,CAAG,EA/D1BlB,KAAKsB,SAAWC,EAAAA,YAChBvB,KAAKC,YAAc,IACrB,CAEAuB,iBAAAA,GACEC,SAASC,MAAQ,iBAEjB1B,KAAKI,WAAa,IAAIuB,EAAAA,GAAW3B,KAAKsB,UACtCtB,KAAKI,WAAWwB,OAChB5B,KAAK6B,YACLjB,OAAOkB,iBAAiB,SAAU9B,KAAKI,WAAW2B,aACpD,CAEAC,oBAAAA,GACEP,SAASC,MAAQ,oBACjBd,OAAOqB,oBAAoB,SAAUjC,KAAKI,WAAW2B,cACrDG,qBAAqBlC,KAAKC,aAC1BD,KAAKmC,SAASC,UACdpC,KAAKI,WAAWgC,SAClB,CAGAP,SAAAA,GAEE,MAAMnB,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QACtD,IAAIuB,EAAQ3B,EAAU4B,IAAI,YAC1B,GAAI1B,OAAO2B,QAAQC,YAAcH,EAAO,CACtC3B,EAAUK,IAAI,WAAY,GAC1B,IAAIC,EAASN,EAAUO,WACnBC,EAAG,GAAAC,OAAMP,OAAOC,SAASO,SAAQ,KAAAD,OAAIH,GACzCJ,OAAO2B,QAAQC,UAAU,KAAK,KAAKtB,EACrC,CAEA,IAAIZ,EAAQN,KAAKI,WAAWE,MAC5BN,KAAKmC,SAAW,GAEH,MAAVE,EACD/B,EAAMmC,IAAIC,EAAAA,GAAAA,EAAAA,iBAEV1C,KAAKmC,SAAW,IAAIO,EAAAA,GAAAA,EAAAA,aAAgC,CAACC,OAAO,KAC5DrC,EAAMmC,IAAIzC,KAAKmC,SAASS,OAAM,GAAK,KAGrC5C,KAAKG,MAAQ,IAAI0C,EAAAA,GAAAA,EACjBvC,EAAMmC,IAAIzC,KAAKG,MAAMyC,UAErBE,EAAAA,EAAAA,IAAYxC,GAEZN,KAAKD,SACP,CAiBAQ,MAAAA,GACE,OACEwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,UAC1CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAgBG,IAAKnD,KAAKsB,SAAS2B,UAChDF,EAAAA,EAAAA,KAAA,gBAEFG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,UAAQK,QAASA,IAAIpD,KAAKQ,eAAe,GAAGyC,SAAC,OAC7CF,EAAAA,EAAAA,KAAA,UAAQK,QAASA,IAAIpD,KAAKQ,eAAe,GAAGyC,SAAC,OAC7CF,EAAAA,EAAAA,KAAA,UAAQK,QAASA,IAAIpD,KAAKQ,eAAe,GAAGyC,SAAC,aAKvD,EAGF,S","sources":["pages/webgl3d/circular-toypacket.jsx"],"sourcesContent":["import React, { Component} from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\n\r\nimport * as Helpers from './helpers';\r\nimport {ThreeSetup,Platforms,Environment,objects3D} from './components';\r\n\r\n\r\n\r\nimport '../../scss/main.scss'\r\nimport './styles.scss'\r\n\r\nclass Webgl3d extends Component  {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.sceneRef = React.createRef();\r\n    this.animationId = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = \"WebGL || WebGL\";\r\n\r\n    this.threeSetup = new ThreeSetup(this.sceneRef)\r\n    this.threeSetup.init();\r\n    this.initThree()\r\n    window.addEventListener('resize', this.threeSetup.handleResize);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    document.title = \"Canvas Generative\";\r\n    window.removeEventListener('resize', this.threeSetup.handleResize);\r\n    cancelAnimationFrame(this.animationId);\r\n    this.platform.dispose()\r\n    this.threeSetup.dispose();\r\n  }\r\n\r\n\r\n  initThree() {\r\n\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    let pType = urlParams.get('platform');\r\n    if (window.history.pushState && !pType) {\r\n      urlParams.set(\"platform\", 1)\r\n      let params = urlParams.toString();\r\n      let url = `${window.location.pathname}?${params}`;\r\n      window.history.pushState(null,null,url);\r\n    }\r\n\r\n    let scene = this.threeSetup.scene;\r\n    this.platform = \"\";\r\n\r\n    if(pType === \"2\"){\r\n      scene.add(Platforms.Circular.outwardStrip());\r\n    }else {\r\n      this.platform = new Platforms.Circular.grooveStrip3({radius:18});\r\n      scene.add(this.platform.setup(true,true))\r\n      // scene.add(Platforms.Circular.grooveStrip2({lightOn:false,animated:true,colors:{top:0x00FFFF,middle:0x1CFF00,bottom:0xFF005C}}));\r\n    }\r\n    this.model = new objects3D.SpaceShipPacket();\r\n    scene.add(this.model.setup())\r\n\r\n    Environment(scene)\r\n\r\n    this.animate();\r\n  }\r\n\r\n  animate = () => {\r\n    this.animationId = requestAnimationFrame(this.animate);\r\n    this.model.animate(this.threeSetup.renderer,this.threeSetup.scene)\r\n    this.threeSetup.render()\r\n  }\r\n\r\n\r\n  switchPlatform = (index) =>{\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    urlParams.set(\"platform\", index)\r\n    let params = urlParams.toString();\r\n    let url = `${window.location.pathname}?${params}`;\r\n    window.location.href = url;\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"section__model main__margin\">\r\n        <div className=\"main__panel\">\r\n          <div className=\"canvas__panel\" ref={this.sceneRef}>\r\n            <canvas/>\r\n          </div>\r\n          <div className=\"canvas__btns\">\r\n            <button onClick={()=>this.switchPlatform(1)}>1</button>\r\n            <button onClick={()=>this.switchPlatform(2)}>2</button>\r\n            <button onClick={()=>this.switchPlatform(3)}>3</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Webgl3d;\r\n"],"names":["Webgl3d","Component","constructor","props","super","animate","this","animationId","requestAnimationFrame","model","threeSetup","renderer","scene","render","switchPlatform","index","urlParams","URLSearchParams","window","location","search","set","params","toString","url","concat","pathname","href","sceneRef","React","componentDidMount","document","title","ThreeSetup","init","initThree","addEventListener","handleResize","componentWillUnmount","removeEventListener","cancelAnimationFrame","platform","dispose","pType","get","history","pushState","add","Platforms","radius","setup","objects3D","Environment","_jsx","className","children","_jsxs","ref","onClick"],"sourceRoot":""}